<!DOCTYPE html>
<html lang="vi">

<head>
  <meta charset="UTF-8">
  <title>Danh sách sản phẩm iPhone</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body class="bg-light">
  <div class="container mt-4">
    <h1 class="text-center mb-4">Danh sách sản phẩm iPhone</h1>

    <!-- Nút thêm sản phẩm -->
    <div class="text-end mb-4">
      <a href="/add-product" class="btn btn-success">Thêm sản phẩm</a>
    </div>

    <!-- BỘ LỌC -->
    <form id="filterForm" class="row g-3 mb-4">
      <div class="col-md-4">
        <input type="text" name="search" class="form-control" placeholder="Tìm kiếm sản phẩm">
      </div>
      <div class="col-md-2">
        <input type="number" name="minPrice" class="form-control" placeholder="Giá từ">
      </div>
      <div class="col-md-2">
        <input type="number" name="maxPrice" class="form-control" placeholder="Giá đến">
      </div>
      <div class="col-md-2">
        <select name="sort" class="form-select">
          <option value="">Sắp xếp</option>
          <option value="asc">Giá tăng dần</option>
          <option value="desc">Giá giảm dần</option>
        </select>
      </div>
      <div class="col-md-2">
        <button type="submit" class="btn btn-primary w-100">Lọc</button>
      </div>
    </form>

    <!-- DANH SÁCH SẢN PHẨM -->
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>Ảnh</th>
          <th>Tên sản phẩm</th>
          <th>Giá</th>
          <th>Danh mục</th>
          <th>Thao tác</th>
        </tr>
      </thead>
      <tbody id="productList">
        <!-- Sản phẩm sẽ được hiển thị ở đây -->
      </tbody>
    </table>

    <!-- PHÂN TRANG -->
    <nav>
      <ul id="pagination" class="pagination justify-content-center mt-4"></ul>
    </nav>
  </div>

  <script>
    let currentPage = 1;
    const limit = 6;
  
    // Lấy danh sách sản phẩm từ API
    async function fetchProducts(page = 1, filters = {}) {
      try {
        const params = new URLSearchParams({ page, limit, ...filters });
        const response = await fetch(`/api/products?${params}`);
        const data = await response.json();
  
        if (response.ok) {
          displayProducts(data.products); // Hiển thị danh sách sản phẩm
          updatePagination(data.totalPages); // Cập nhật phân trang
        } else {
          alert(data.message || 'Lỗi khi tải sản phẩm.');
        }
      } catch (err) {
        console.error('Lỗi khi tải sản phẩm:', err);
        alert('Không thể tải danh sách sản phẩm.');
      }
    }
  
    // Hiển thị danh sách sản phẩm
    function displayProducts(products) {
      const container = document.getElementById('productList');
      container.innerHTML = ''; // Xóa danh sách sản phẩm hiện tại
  
      if (products.length === 0) {
        container.innerHTML = '<tr><td colspan="5" class="text-center">Không có sản phẩm nào.</td></tr>';
        return;
      }
  
      products.forEach(p => {
        container.innerHTML += `
          <tr>
            <td><img src="${p.image || '/default-image.jpg'}" alt="${p.name}" class="img-fluid" style="max-width: 100px;"></td>
            <td>${p.name}</td>
            <td>${p.variants?.[0]?.price?.toLocaleString('vi-VN') || 'Chưa có giá'} VND</td>
            <td>${p.category?.name || 'Chưa có'}</td>
            <td>
              <a href="/product/${p._id}" class="btn btn-info btn-sm">Xem chi tiết</a>
              <a href="/edit-product/${p._id}" class="btn btn-warning btn-sm">Sửa</a>
              <button onclick="deleteProduct('${p._id}')" class="btn btn-danger btn-sm">Xóa</button>
            </td>
          </tr>`;
      });
    }
  
    // Cập nhật phân trang
    function updatePagination(totalPages) {
      const pagination = document.getElementById('pagination');
      pagination.innerHTML = ''; // Xóa phân trang hiện tại
  
      for (let i = 1; i <= totalPages; i++) {
        pagination.innerHTML += `
          <li class="page-item ${i === currentPage ? 'active' : ''}">
            <button class="page-link" onclick="goToPage(${i})">${i}</button>
          </li>`;
      }
    }
  
    // Chuyển đến trang khác
    function goToPage(page) {
      currentPage = page;
      const filters = Object.fromEntries(new FormData(document.getElementById('filterForm')));
      fetchProducts(page, filters);
    }
  
    // Xóa sản phẩm
    async function deleteProduct(productId) {
      if (confirm('Bạn có chắc chắn muốn xóa sản phẩm này?')) {
        try {
          const response = await fetch(`/api/products/${productId}`, {
            method: 'DELETE'
          });
          if (response.ok) {
            alert('Sản phẩm đã được xóa.');
            fetchProducts(currentPage); // Cập nhật danh sách sau khi xóa
          } else {
            const error = await response.json();
            alert(error.message || 'Lỗi khi xóa sản phẩm.');
          }
        } catch (err) {
          console.error('Lỗi khi xóa sản phẩm:', err);
          alert('Không thể xóa sản phẩm.');
        }
      }
    }
  
    // Tải sản phẩm lần đầu
    fetchProducts(currentPage);
  </script>
</body>

</html>