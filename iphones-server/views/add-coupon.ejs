<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <title>Quản lý Mã Giảm Giá</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
<div class="container py-5">
  <h2 class="mb-4">Quản lý Mã Giảm Giá</h2>

  <!-- Form thêm / sửa mã giảm giá -->
  <form id="couponForm">
    <input type="hidden" id="couponId" value="">
    <div class="mb-3">
      <label for="code" class="form-label">Mã Giảm Giá</label>
      <input type="text" class="form-control" id="code" placeholder="Nhập mã giảm giá" required>
    </div>
    <div class="mb-3">
      <label for="discount" class="form-label">Phần trăm giảm (%)</label>
      <input type="number" class="form-control" id="discount" placeholder="Nhập phần trăm giảm" value="10" min="1" max="100" required>
    </div>
    <div class="mb-3">
      <label for="expiresAt" class="form-label">Ngày hết hạn</label>
      <input type="date" class="form-control" id="expiresAt" required>
    </div>
    <button type="submit" class="btn btn-primary">Lưu</button>
    <button type="button" class="btn btn-secondary" onclick="clearForm()">Hủy</button>
  </form>

  <!-- Thông báo -->
  <div id="message" class="alert alert-info mt-3" style="display:none;"></div>

  <hr class="my-5">

  <!-- Danh sách coupon -->
  <h4>Danh sách Mã Giảm Giá</h4>
  <table class="table table-bordered mt-3" id="couponTable">
    <thead class="table-light">
      <tr>
        <th>Mã</th>
        <th>Phần trăm giảm</th>
        <th>Ngày tạo</th>
        <th>Ngày hết hạn</th>
        <th>Thời gian còn lại</th>
        <th>Hành động</th>
      </tr>
    </thead>
    <tbody>
      <!-- Các mã giảm giá sẽ được load ở đây bằng Javascript -->
    </tbody>
  </table>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
// Khởi tạo ngày hết hạn mặc định là hôm nay
document.addEventListener('DOMContentLoaded', function() {
  const expiresAtInput = document.getElementById('expiresAt');
  const today = new Date();
  const yyyy = today.getFullYear();
  const mm = String(today.getMonth() + 1).padStart(2, '0');
  const dd = String(today.getDate()).padStart(2, '0');
  expiresAtInput.value = `${yyyy}-${mm}-${dd}`;

  loadCoupons();
});

const COUPON_API_URL = 'http://localhost:5000/api/coupons';
let coupons = [];

const couponForm = document.getElementById('couponForm');
const couponTableBody = document.querySelector('#couponTable tbody');
const couponIdInput = document.getElementById('couponId');
const messageDiv = document.getElementById('message');

async function loadCoupons() {
  try {
    const res = await fetch(COUPON_API_URL);
    if (!res.ok) throw new Error('Không thể tải mã giảm giá');
    coupons = await res.json();
    renderCoupons();
  } catch (error) {
    showMessage('error', error.message);
  }
}

async function createCoupon(coupon) {
  try {
    const res = await fetch(COUPON_API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(coupon)
    });
    if (!res.ok) throw new Error('Tạo mã giảm giá thất bại');
    const newCoupon = await res.json();
    coupons.push(newCoupon);
    renderCoupons();
    showMessage('success', 'Thêm mã giảm giá thành công!');
  } catch (error) {
    showMessage('error', error.message);
  }
}

async function updateCoupon(id, coupon) {
  try {
    const res = await fetch(`${COUPON_API_URL}/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(coupon)
    });
    if (!res.ok) throw new Error('Cập nhật mã giảm giá thất bại');
    const index = coupons.findIndex(c => c._id === id);
    if (index !== -1) {
      coupons[index] = { ...coupons[index], ...coupon };
    }
    renderCoupons();
    showMessage('success', 'Cập nhật mã giảm giá thành công!');
  } catch (error) {
    showMessage('error', error.message);
  }
}

async function deleteCoupon(id) {
  if (!confirm('Bạn có chắc chắn muốn xóa mã giảm giá này không?')) return;
  try {
    const res = await fetch(`${COUPON_API_URL}/${id}`, {
      method: 'DELETE'
    });
    if (!res.ok) throw new Error('Xóa mã giảm giá thất bại');
    coupons = coupons.filter(c => c._id !== id);
    renderCoupons();
    showMessage('success', 'Xóa mã giảm giá thành công!');
  } catch (error) {
    showMessage('error', error.message);
  }
}

function editCoupon(id) {
  const coupon = coupons.find(c => c._id === id);
  if (coupon) {
    document.getElementById('code').value = coupon.code;
    document.getElementById('discount').value = coupon.discount;
    document.getElementById('expiresAt').value = coupon.expiresAt.substring(0, 10);
    couponIdInput.value = coupon._id;
  }
}

function renderCoupons() {
  couponTableBody.innerHTML = '';
  coupons.forEach(coupon => {
    const createdAt = coupon.createdAt ? new Date(coupon.createdAt).toLocaleDateString() : 'Không rõ';
    const expiresAt = coupon.expiresAt ? new Date(coupon.expiresAt) : null;
    const now = new Date();
    let timeLeft = 'Không xác định';

    if (expiresAt) {
      const diffTime = expiresAt - now;
      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
      if (diffDays > 0) {
        timeLeft = `Còn ${diffDays} ngày`;
      } else if (diffDays === 0) {
        timeLeft = `Hết hạn hôm nay`;
      } else {
        timeLeft = `Đã hết hạn`;
      }
    }

    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${coupon.code || 'Chưa có mã'}</td>
      <td>${coupon.discount !== undefined ? coupon.discount : 10}%</td>
      <td>${createdAt}</td>
      <td>${expiresAt ? expiresAt.toLocaleDateString() : 'Chưa có ngày hết hạn'}</td>
      <td>${timeLeft}</td>
      <td>
        <button class="btn btn-warning btn-sm me-2" onclick="editCoupon('${coupon._id}')">Sửa</button>
        <button class="btn btn-danger btn-sm" onclick="deleteCoupon('${coupon._id}')">Xóa</button>
      </td>
    `;
    couponTableBody.appendChild(tr);
  });
}

function clearForm() {
  couponForm.reset();
  couponIdInput.value = '';
}

function showMessage(type, message) {
  messageDiv.style.display = 'block';
  messageDiv.className = `alert alert-${type === 'success' ? 'success' : 'danger'}`;
  messageDiv.innerText = message;
  setTimeout(() => messageDiv.style.display = 'none', 3000);
}

couponForm.addEventListener('submit', async function(e) {
  e.preventDefault();
  const code = document.getElementById('code').value.trim();
  const discount = parseFloat(document.getElementById('discount').value);
  const expiresAt = document.getElementById('expiresAt').value;
  const id = couponIdInput.value;

  if (!code || !expiresAt || !discount) {
    showMessage('error', 'Vui lòng điền đầy đủ thông tin!');
    return;
  }

  const couponData = { code, discount, expiresAt };

  if (id) {
    await updateCoupon(id, couponData);
  } else {
    await createCoupon(couponData);
  }

  clearForm();
});
</script>

</body>
</html>
